/// <reference path="../../../java/index.d.ts" />
/// <reference path="../../../jagex/index.d.ts" />
/// <reference path=".d.ts" />
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: party.proto
declare namespace net.runelite.client.party {
/* public */ final class Party {
export interface JoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.Join)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
  /**
   * <pre>
   * c-&gt;s
   * </pre>
   *
   * Protobuf type {@code party.Join}
   */
export class Join extends
      // @@protoc_insertion_point(message_implements:party.Join)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 partyId = 1;</code>
     * @param value The partyId to set.
     */
    /**
     * <code>int64 partyId = 1;</code>
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @param value The memberId to set.
     */
    /**
     * <code>int64 memberId = 2;</code>
     */
    /**
     * <pre>
     * c-&gt;s
     * </pre>
     *
     * Protobuf type {@code party.Join}
     */
        // @@protoc_insertion_point(builder_implements:party.Join)
      // Construct using net.runelite.client.party.Party.Join.newBuilder()
      /**
       * <code>int64 partyId = 1;</code>
       * @return The partyId.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return The memberId.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @param value The memberId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return This builder for chaining.
       */
      // @@protoc_insertion_point(builder_scope:party.Join)
        // fall through
    // @@protoc_insertion_point(class_scope:party.Join)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface PartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.Part)
  /**
   * Protobuf type {@code party.Part}
   */
export class Part extends
      // @@protoc_insertion_point(message_implements:party.Part)
    /**
     * Protobuf type {@code party.Part}
     */
        // @@protoc_insertion_point(builder_implements:party.Part)
      // Construct using net.runelite.client.party.Party.Part.newBuilder()
      // @@protoc_insertion_point(builder_scope:party.Part)
        // fall through
    // @@protoc_insertion_point(class_scope:party.Part)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface DataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.Data)
    /**
     * <code>string type = 2;</code>
     * @return The type.
     */
    /**
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
  /**
   * Protobuf type {@code party.Data}
   */
export class Data extends
      // @@protoc_insertion_point(message_implements:party.Data)
    /**
     * <code>string type = 2;</code>
     * @return The type.
     */
    /**
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    /**
     * <code>string type = 2;</code>
     * @param value The type to set.
     */
    /**
     * <code>string type = 2;</code>
     */
    /**
     * <code>string type = 2;</code>
     * @param value The bytes for type to set.
     */
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    /**
     * <code>bytes data = 1;</code>
     */
    /**
     * Protobuf type {@code party.Data}
     */
        // @@protoc_insertion_point(builder_implements:party.Data)
      // Construct using net.runelite.client.party.Party.Data.newBuilder()
      /**
       * <code>string type = 2;</code>
       * @return The type.
       */
      /**
       * <code>string type = 2;</code>
       * @return The bytes for type.
       */
      /**
       * <code>string type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      /**
       * <code>string type = 2;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>string type = 2;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      // @@protoc_insertion_point(builder_scope:party.Data)
        // fall through
    // @@protoc_insertion_point(class_scope:party.Data)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface C2SOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.C2S)
    /**
     * <code>.party.Join join = 1;</code>
     * @return Whether the join field is set.
     */
    /**
     * <code>.party.Join join = 1;</code>
     * @return The join.
     */
    /**
     * <code>.party.Part part = 2;</code>
     * @return Whether the part field is set.
     */
    /**
     * <code>.party.Part part = 2;</code>
     * @return The part.
     */
    /**
     * <code>.party.Data data = 3;</code>
     * @return Whether the data field is set.
     */
    /**
     * <code>.party.Data data = 3;</code>
     * @return The data.
     */
  /**
   * Protobuf type {@code party.C2S}
   */
export class C2S extends
      // @@protoc_insertion_point(message_implements:party.C2S)
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
    /**
     * <code>.party.Join join = 1;</code>
     */
    /**
     * <code>.party.Join join = 1;</code>
     */
    /**
     * <code>.party.Join join = 1;</code>
     */
    /**
     * <code>.party.Join join = 1;</code>
     */
    /**
     * <code>.party.Join join = 1;</code>
     */
    /**
     * <code>.party.Part part = 2;</code>
     */
    /**
     * <code>.party.Part part = 2;</code>
     */
    /**
     * <code>.party.Part part = 2;</code>
     */
    /**
     * <code>.party.Part part = 2;</code>
     */
    /**
     * <code>.party.Part part = 2;</code>
     */
    /**
     * <code>.party.Data data = 3;</code>
     */
    /**
     * <code>.party.Data data = 3;</code>
     */
    /**
     * <code>.party.Data data = 3;</code>
     */
    /**
     * <code>.party.Data data = 3;</code>
     */
    /**
     * <code>.party.Data data = 3;</code>
     */
    /**
     * Protobuf type {@code party.C2S}
     */
        // @@protoc_insertion_point(builder_implements:party.C2S)
      // Construct using net.runelite.client.party.Party.C2S.newBuilder()
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Join join = 1;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Part part = 2;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      /**
       * <code>.party.Data data = 3;</code>
       */
      // @@protoc_insertion_point(builder_scope:party.C2S)
        // fall through
    // @@protoc_insertion_point(class_scope:party.C2S)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface UserJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.UserJoin)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
  /**
   * <pre>
   * s-&gt;c
   * </pre>
   *
   * Protobuf type {@code party.UserJoin}
   */
export class UserJoin extends
      // @@protoc_insertion_point(message_implements:party.UserJoin)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 partyId = 1;</code>
     * @param value The partyId to set.
     */
    /**
     * <code>int64 partyId = 1;</code>
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @param value The memberId to set.
     */
    /**
     * <code>int64 memberId = 2;</code>
     */
    /**
     * <pre>
     * s-&gt;c
     * </pre>
     *
     * Protobuf type {@code party.UserJoin}
     */
        // @@protoc_insertion_point(builder_implements:party.UserJoin)
      // Construct using net.runelite.client.party.Party.UserJoin.newBuilder()
      /**
       * <code>int64 partyId = 1;</code>
       * @return The partyId.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return The memberId.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @param value The memberId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return This builder for chaining.
       */
      // @@protoc_insertion_point(builder_scope:party.UserJoin)
        // fall through
    // @@protoc_insertion_point(class_scope:party.UserJoin)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface UserPartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.UserPart)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
  /**
   * Protobuf type {@code party.UserPart}
   */
export class UserPart extends
      // @@protoc_insertion_point(message_implements:party.UserPart)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 partyId = 1;</code>
     * @param value The partyId to set.
     */
    /**
     * <code>int64 partyId = 1;</code>
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @param value The memberId to set.
     */
    /**
     * <code>int64 memberId = 2;</code>
     */
    /**
     * Protobuf type {@code party.UserPart}
     */
        // @@protoc_insertion_point(builder_implements:party.UserPart)
      // Construct using net.runelite.client.party.Party.UserPart.newBuilder()
      /**
       * <code>int64 partyId = 1;</code>
       * @return The partyId.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return The memberId.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @param value The memberId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return This builder for chaining.
       */
      // @@protoc_insertion_point(builder_scope:party.UserPart)
        // fall through
    // @@protoc_insertion_point(class_scope:party.UserPart)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface PartyDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.PartyData)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
    /**
     * <code>string type = 4;</code>
     * @return The type.
     */
    /**
     * <code>string type = 4;</code>
     * @return The bytes for type.
     */
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
  /**
   * Protobuf type {@code party.PartyData}
   */
export class PartyData extends
      // @@protoc_insertion_point(message_implements:party.PartyData)
    /**
     * <code>int64 partyId = 1;</code>
     * @return The partyId.
     */
    /**
     * <code>int64 partyId = 1;</code>
     * @param value The partyId to set.
     */
    /**
     * <code>int64 partyId = 1;</code>
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @return The memberId.
     */
    /**
     * <code>int64 memberId = 2;</code>
     * @param value The memberId to set.
     */
    /**
     * <code>int64 memberId = 2;</code>
     */
    /**
     * <code>string type = 4;</code>
     * @return The type.
     */
    /**
     * <code>string type = 4;</code>
     * @return The bytes for type.
     */
    /**
     * <code>string type = 4;</code>
     * @param value The type to set.
     */
    /**
     * <code>string type = 4;</code>
     */
    /**
     * <code>string type = 4;</code>
     * @param value The bytes for type to set.
     */
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    /**
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     */
    /**
     * <code>bytes data = 3;</code>
     */
    /**
     * Protobuf type {@code party.PartyData}
     */
        // @@protoc_insertion_point(builder_implements:party.PartyData)
      // Construct using net.runelite.client.party.Party.PartyData.newBuilder()
      /**
       * <code>int64 partyId = 1;</code>
       * @return The partyId.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @param value The partyId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 partyId = 1;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return The memberId.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @param value The memberId to set.
       * @return This builder for chaining.
       */
      /**
       * <code>int64 memberId = 2;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>string type = 4;</code>
       * @return The type.
       */
      /**
       * <code>string type = 4;</code>
       * @return The bytes for type.
       */
      /**
       * <code>string type = 4;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      /**
       * <code>string type = 4;</code>
       * @return This builder for chaining.
       */
      /**
       * <code>string type = 4;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      /**
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      /**
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      /**
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      // @@protoc_insertion_point(builder_scope:party.PartyData)
        // fall through
    // @@protoc_insertion_point(class_scope:party.PartyData)
      // New instances are implicitly immutable so no need to make
      // immutable.
export interface S2COrBuilder extends
      // @@protoc_insertion_point(interface_extends:party.S2C)
    /**
     * <code>.party.UserJoin join = 1;</code>
     * @return Whether the join field is set.
     */
    /**
     * <code>.party.UserJoin join = 1;</code>
     * @return The join.
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     * @return Whether the part field is set.
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     * @return The part.
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     * @return Whether the data field is set.
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     * @return The data.
     */
  /**
   * Protobuf type {@code party.S2C}
   */
export class S2C extends
      // @@protoc_insertion_point(message_implements:party.S2C)
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
    /**
     * <code>.party.UserJoin join = 1;</code>
     */
    /**
     * <code>.party.UserJoin join = 1;</code>
     */
    /**
     * <code>.party.UserJoin join = 1;</code>
     */
    /**
     * <code>.party.UserJoin join = 1;</code>
     */
    /**
     * <code>.party.UserJoin join = 1;</code>
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     */
    /**
     * <code>.party.UserPart part = 2;</code>
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     */
    /**
     * <code>.party.PartyData data = 3;</code>
     */
    /**
     * Protobuf type {@code party.S2C}
     */
        // @@protoc_insertion_point(builder_implements:party.S2C)
      // Construct using net.runelite.client.party.Party.S2C.newBuilder()
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserJoin join = 1;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.UserPart part = 2;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      /**
       * <code>.party.PartyData data = 3;</code>
       */
      // @@protoc_insertion_point(builder_scope:party.S2C)
        // fall through
    // @@protoc_insertion_point(class_scope:party.S2C)
      // New instances are implicitly immutable so no need to make
      // immutable.
  // @@protoc_insertion_point(outer_class_scope)
}